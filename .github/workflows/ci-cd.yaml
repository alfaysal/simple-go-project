name: Go Test, Build & Deploy

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
env:
  APP_NAME: "simple-go-project"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Test Simple Go Project
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23.0'

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            /home/runner/.cache/go-build
            /home/runner/go/pkg/mod
            !~/go/pkg/mod/golang.org
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Run tests
        run: go test -v -race ./...

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23.0'
          cache: false

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            /home/runner/.cache/go-build
            /home/runner/go/pkg/mod
            !~/go/pkg/mod/golang.org
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          docker build -t allfaysal/simple-go-project:${{ github.sha }} .

      - name: Push Docker image to Docker Hub
        run: |
          docker push allfaysal/simple-go-project:${{ github.sha }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Docker image
        uses: actions/download-artifact@v3
        with:
          name: docker-image

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/simple-go-project.pem
          chmod 600 ~/.ssh/ec2_key
          echo "${{ secrets.EC2_HOST }} $(ssh-keyscan -t ed25519 ${{ secrets.EC2_HOST }} | cut -d' ' -f2-)" >> ~/.ssh/known_hosts

      - name: Deploy to EC2
        run: |
          ssh -i ~/.ssh/simple-go-project.pem -o StrictHostKeyChecking=yes ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          docker pull allfaysal/simple-go-project:${{ github.sha }} || true
          
          docker stop $APP_NAME || true
          docker rm $APP_NAME || true
          
          docker run -d \
            --name $APP_NAME \
            --restart unless-stopped \
            -p 8112:8100 \
            allfaysal/simple-go-project:${{ github.sha }}
          EOF          
